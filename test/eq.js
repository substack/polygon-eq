var test = require('tape')
var eq = require('../')

test('{A,B,C}2', function (t) {
  var A = [ [ 6.25, 6 ], [ 10, 12 ], [ 10, 4 ], [ 7.5, 4 ], [ 10, 0 ], [ 0, 0 ], [ 5, 8 ] ]
  var B = [ [ 6.25, 6 ], [ 5, 8 ], [ 0, 0 ], [ 10, 0 ], [ 7.5, 4 ], [ 10, 4 ], [ 10, 12 ] ]
  var C = [ [ 6.25, 6 ], [ 10, 12 ], [ 7.5, 4 ], [ 10, 4 ], [ 10, 0 ], [ 0, 0 ], [ 5, 8 ] ]
  t.ok(eq(A,B), 'A,B')
  t.ok(eq([A],B), '[A],B')
  t.ok(eq([[A]],B), '[[A]],B')
  t.ok(eq([[A]],[B]), '[[A]],[B]')
  t.ok(eq(A,[B]), 'A,[B]')
  t.ok(eq(A,[[B]]), 'A,[[B]]')
  t.ok(eq([A],[[B]]), '[A],[[B]]')
  t.ok(eq([[A]],[[B]]), '[[A]],[[B]]')
  t.ok(eq(B,A), 'B,A')
  t.ok(eq([B],A), '[B],A')
  t.ok(eq([[B]],A), '[[B]],A')
  t.ok(eq([[B]],[A]), '[[B]],[A]')
  t.ok(eq(B,[A]), 'B,[A]')
  t.ok(eq(B,[[A]]), 'B,[[A]]')
  t.ok(eq([B],[[A]]), '[B],[[A]]')
  t.ok(eq([[B]],[[A]]), '[[B]],[[A]]')
  t.notOk(eq(A,C), 'A,C')
  t.notOk(eq(A,[C]), 'A,[C]')
  t.notOk(eq(A,[[C]]), 'A,[[C]]')
  t.notOk(eq([A],[[C]]), '[A],[[C]]')
  t.notOk(eq([[A]],[[C]]), '[[A]],[[C]]')
  t.notOk(eq(C,A), 'C,A')
  t.notOk(eq([C],A), '[C],A')
  t.notOk(eq([[C]],A), '[[C]],A')
  t.notOk(eq([[C]],[A]), '[[C]],[A]')
  t.notOk(eq([[C]],[[A]]), '[[C]],[[A]]')
  t.notOk(eq(C,[A]), 'C,[A]')
  t.notOk(eq(C,[[A]]), 'C,[[A]]')
  t.notOk(eq([C],[[A]]), '[C],[[A]]')
  t.end()
})

test('{A,B,C}3 with 1 hole', function (t) {
  var A = [
    [ [ 6.25, 6 ], [ 10, 12 ], [ 15, -2 ], [ 7, -2 ], [ 8, 0 ], [ 0, 0 ], [ 5, 8 ] ],
    [ [ 8.889, 1.778 ], [ 10, 4 ], [ 7.5, 4 ] ]
  ]
  var B = [
    [ [ 6.25, 6 ], [ 5, 8 ], [ 0, 0 ], [ 8, 0 ], [ 7, -2 ], [ 15, -2 ], [ 10, 12 ] ],
    [ [ 7.5, 4 ], [ 8.889, 1.778 ], [ 10, 4 ] ]
  ]
  var C = [
    [ [ 6.25, 6 ], [ 5, 8 ], [ 0, 0 ], [ 8, 0 ], [ 7, -2 ], [ 15, -2 ], [ 10, 12 ] ],
    [ [ 7.5, 4 ], [ 8.889, 1.778 ], [ 10, 4.1 ] ],
  ]
  t.ok(eq(A,B))
  t.notOk(eq(A,C))
  t.end()
})

test('2 multipolygons', function (t) {
  var A = [
    [
      [[6.25,6],[10,12],[15,-2],[7,-2],[8,0],[0,0],[5,8]],
      [[8.889,1.778],[10,4],[7.5,4]],
    ],
    [[[-4,+4],[-4,+7],[-2,+5]]],
  ]
  var B = [
    [[[-4,+7],[-4,+4],[-2,+5]]],
    [
      [[6.25,6],[5,8],[0,0],[8,0],[7,-2],[15,-2],[10,12]],
      [[7.5,4],[8.889,1.778],[10,4]],
    ],
  ]
  t.ok(eq(A,B))
  t.end()
})

test('complex scenario', function (t) {
  var A = [
    [
      [[-3,-3],[2.75,-3],[2,-4],[-0.5,-4],[-3.2222222222222214,-3.2222222222222223]]
    ],
    [
      [
        [3.3333333333333335,4],[3.6666666666666665,3],[3,3],[2.5,2],[2,3],[0,3],[0,2],
        [2.142857142857143,1.2857142857142856],[2,1],[3.2,0.3999999999999999],
        [2.6842105263157894,-0.6315789473684212],[2,-0.7],[2,0],
        [1.2222222222222223,-0.7777777777777778],[-0.16666666666666652,-0.9166666666666667],
        [-1.4285714285714284,-0.2857142857142858],[0,4]
      ],
      [[0,1],[0,0],[1,0],[1,1]]
    ],
    [[[2.111111111111111,-1.7777777777777777],[2,-2],[1,-1.5]]],
    [[[-2,0],[-2.5,0.25],[-2.5,0.5],[-2.666666666666667,0.3333333333333335],
      [-3.333333333333333,0.6666666666666665],[-3,1],[-2,1]]]
  ]
  var B = [
    [[[-10/3,+2/3],[-3,+1],[-2,+1],[-2,+0],[-2.5,+0.25],[-2.5,+0.5],[-8/3,+1/3]]],
    [
      [
        [-10/7,-2/7],[+0,+4],[+10/3,+4],[+11/3,+3],[+3,+3],[+2.5,+2],[+2,+3],
        [+0,+3],[+0,+2],[+15/7,+9/7],[+2,+1],[+3.2,+0.4],[+51/19,-12/19],
        [+2,-0.7],[+2,+0],[+11/9,-7/9],[-1/6,-11/12],
      ],
      [[+0,+0],[+0,+1],[+1,+1],[+1,+0]],
    ],
    [[[+1,-1.5],[19/9,-16/9],[+2,-2]]],
    [[[-29/9,-29/9],[-3,-3],[+2.75,-3],[+2,-4],[-0.5,-4]]],
  ]
  t.ok(eq(A,B,1e-3))
  t.end()
})

test('ignore if first and last are equal', function (t) {
  t.ok(eq(
    [[6.25,6],[10,12],[15,-2],[7,-2],[8,0],[0,0],[5,8]],
    [[0,0],[8,0],[7,-2],[15,-2],[10,12],[6.25,6],[5,8],[0,0]]
  ))
  t.ok(eq(
    [[6.25,6],[5,8],[0,0],[8,0],[7,-2],[15,-2],[10,12],[6.25,6]],
    [[6.25,6],[10,12],[15,-2],[7,-2],[8,0],[0,0],[5,8]]
  ))
  t.ok(eq(
    [[6.25,6],[5,8],[0,0],[8,0],[7,-2],[15,-2],[10,12],[6.25,6]],
    [[5,8],[6.25,6],[10,12],[15,-2],[7,-2],[8,0],[0,0],[5,8]]
  ))
  t.ok(eq(
    [
      [
        [[6.25,6],[10,12],[15,-2],[7,-2],[8,0],[0,0],[5,8]],
        [[8.889,1.778],[10,4],[7.5,4],[8.889,1.778]],
      ],
      [[[-4,+4],[-4,+7],[-2,+5],[-4,+4]]],
    ],
    [
      [[[-4,+7],[-4,+4],[-2,+5],[-4,+7]]],
      [
        [[6.25,6],[5,8],[0,0],[8,0],[7,-2],[15,-2],[10,12],[6.25,6]],
        [[7.5,4],[8.889,1.778],[10,4]],
      ],
    ]
  ))
  t.end()
})
